/*
** Unobtrusive Ajax support library for jQuery
** Copyright (C) Microsoft Corporation. All rights reserved.
*/
!function (t) {
    var a = "unobtrusiveAjaxClick";

    function e(t, a) {
        for (var e = window, n = (t || "").split("."); e && n.length;) e = e[n.shift()];
        return "function" == typeof e ? e : (a.push(t), Function.constructor.apply(null, a))
    }

    function n(t) {
        return "GET" === t || "POST" === t
    }

    function r(t, a) {
        !n(a) && t.setRequestHeader("X-HTTP-Method-Override", a)
    }

    function i(a, e, n) {
        var r;
        -1 === n.indexOf("application/x-javascript") && (r = (a.getAttribute("data-ajax-mode") || "").toUpperCase(), t(a.getAttribute("data-ajax-update")).each((function (a, n) {
            var i;
            switch (r) {
                case"BEFORE":
                    i = n.firstChild, t("<div />").html(e).contents().each((function () {
                        n.insertBefore(this, i)
                    }));
                    break;
                case"AFTER":
                    t("<div />").html(e).contents().each((function () {
                        n.appendChild(this)
                    }));
                    break;
                default:
                    t(n).html(e)
            }
        })))
    }

    function u(a, u) {
        var o, d, s, c;
        (o = a.getAttribute("data-ajax-confirm")) && !window.confirm(o) || (d = t(a.getAttribute("data-ajax-loading")), c = a.getAttribute("data-ajax-loading-duration") || 0, w = "true" === a.getAttribute("data-ajax-upload"), t.extend(u, {
            type: a.getAttribute("data-ajax-method") || void 0,
            url: a.getAttribute("data-ajax-url") || void 0,
            cache: !w,
            processData: !w,
            contentType: !w && "application/x-www-form-urlencoded",
            beforeSend: function (t) {
                var n;
                return r(t, s), !1 !== (n = e(a.getAttribute("data-ajax-begin"), ["xhr"]).apply(this, arguments)) && d.show(c), n
            },
            complete: function () {
                d.hide(c), e(a.getAttribute("data-ajax-complete"), ["xhr", "status"]).apply(this, arguments)
            },
            success: function (t, n, r) {
                var u = [t, n, r, a];
                i(a, t, r.getResponseHeader("Content-Type") || "text/html"), e(a.getAttribute("data-ajax-success"), ["data", "status", "xhr", "element"]).apply(this, u)
            },
            error: e(a.getAttribute("data-ajax-failure"), ["xhr", "status", "error"])
        }), u.data instanceof FormData ? u.data.append("X-Requested-With", "XMLHttpRequest") : u.data.push({
            name: "X-Requested-With",
            value: "XMLHttpRequest"
        }), n(s = u.type.toUpperCase()) || (u.type = "POST", u.data instanceof FormData ? u.data.append("X-HTTP-Method-Override", s) : u.data.push({
            name: "X-HTTP-Method-Override",
            value: s
        })), t.ajax(u))
    }

    t(document).on("click", "a[data-ajax=true]", (function (t) {
        t.preventDefault(), u(this, {url: this.href, type: "GET", data: []})
    })), t(document).on("click", "form[data-ajax=true] input[type=image]", (function (e) {
        var n = e.target.name, r = t(e.target), i = r.parents("form")[0], u = r.offset();
        t(i).data(a, [{name: n + ".x", value: Math.round(e.pageX - u.left)}, {
            name: n + ".y",
            value: Math.round(e.pageY - u.top)
        }]), setTimeout((function () {
            t(i).removeData(a)
        }), 0)
    })), t(document).on("click", "form[data-ajax=true] :submit", (function (e) {
        var n = e.target.name, r = t(e.target).parents("form")[0];
        t(r).data(a, n ? [{name: n, value: e.target.value}] : []), setTimeout((function () {
            t(r).removeData(a)
        }), 0)
    })), t(document).on("submit", "form[data-ajax=true]", (function (e) {
        var n = "true" === this.getAttribute("data-ajax-upload") ? new FormData(this) : (t(this).data(a) || []).concat(t(this).serializeArray());
        e.preventDefault(), function (a) {
            var e = t(a).data("unobtrusiveValidation");
            return !e || !e.validate || e.validate()
        }(this) && u(this, {url: this.action, type: this.method || "GET", data: n})
    }))
}(jQuery);